// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: task/payload_messages.proto

package task

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TaskBaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *TaskBaseResponse) Reset() {
	*x = TaskBaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_payload_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskBaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskBaseResponse) ProtoMessage() {}

func (x *TaskBaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_payload_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskBaseResponse.ProtoReflect.Descriptor instead.
func (*TaskBaseResponse) Descriptor() ([]byte, []int) {
	return file_task_payload_messages_proto_rawDescGZIP(), []int{0}
}

func (x *TaskBaseResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CreateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId string `protobuf:"bytes,1,opt,name=activity_id,proto3" json:"activity_id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	IsActive   *bool  `protobuf:"varint,3,opt,name=is_active,proto3,oneof" json:"is_active,omitempty"`
	Priority   int32  `protobuf:"varint,4,opt,name=priority,proto3" json:"priority,omitempty"`
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_payload_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_payload_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_task_payload_messages_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTaskRequest) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *CreateTaskRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTaskRequest) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

func (x *CreateTaskRequest) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

type GetAllTaskByActivityIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId   string  `protobuf:"bytes,1,opt,name=activity_id,proto3" json:"activity_id,omitempty"`
	Search       *string `protobuf:"bytes,2,opt,name=search,proto3,oneof" json:"search,omitempty"`
	Page         *int32  `protobuf:"varint,3,opt,name=page,proto3,oneof" json:"page,omitempty"`
	Limit        *int32  `protobuf:"varint,4,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	IsActive     *bool   `protobuf:"varint,5,opt,name=is_active,proto3,oneof" json:"is_active,omitempty"`
	Priority     *int32  `protobuf:"varint,6,opt,name=priority,proto3,oneof" json:"priority,omitempty"`
	IsNewest     *bool   `protobuf:"varint,7,opt,name=is_newest,proto3,oneof" json:"is_newest,omitempty"`
	IsOldest     *bool   `protobuf:"varint,8,opt,name=is_oldest,proto3,oneof" json:"is_oldest,omitempty"`
	IsAscending  *bool   `protobuf:"varint,9,opt,name=is_ascending,proto3,oneof" json:"is_ascending,omitempty"`
	IsDescending *bool   `protobuf:"varint,10,opt,name=is_descending,proto3,oneof" json:"is_descending,omitempty"`
}

func (x *GetAllTaskByActivityIDRequest) Reset() {
	*x = GetAllTaskByActivityIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_payload_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskByActivityIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskByActivityIDRequest) ProtoMessage() {}

func (x *GetAllTaskByActivityIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_payload_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskByActivityIDRequest.ProtoReflect.Descriptor instead.
func (*GetAllTaskByActivityIDRequest) Descriptor() ([]byte, []int) {
	return file_task_payload_messages_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllTaskByActivityIDRequest) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *GetAllTaskByActivityIDRequest) GetSearch() string {
	if x != nil && x.Search != nil {
		return *x.Search
	}
	return ""
}

func (x *GetAllTaskByActivityIDRequest) GetPage() int32 {
	if x != nil && x.Page != nil {
		return *x.Page
	}
	return 0
}

func (x *GetAllTaskByActivityIDRequest) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *GetAllTaskByActivityIDRequest) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

func (x *GetAllTaskByActivityIDRequest) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *GetAllTaskByActivityIDRequest) GetIsNewest() bool {
	if x != nil && x.IsNewest != nil {
		return *x.IsNewest
	}
	return false
}

func (x *GetAllTaskByActivityIDRequest) GetIsOldest() bool {
	if x != nil && x.IsOldest != nil {
		return *x.IsOldest
	}
	return false
}

func (x *GetAllTaskByActivityIDRequest) GetIsAscending() bool {
	if x != nil && x.IsAscending != nil {
		return *x.IsAscending
	}
	return false
}

func (x *GetAllTaskByActivityIDRequest) GetIsDescending() bool {
	if x != nil && x.IsDescending != nil {
		return *x.IsDescending
	}
	return false
}

type TaskPaging struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage int32 `protobuf:"varint,1,opt,name=current_page,proto3" json:"current_page,omitempty"`
	TotalPage   int32 `protobuf:"varint,2,opt,name=total_page,proto3" json:"total_page,omitempty"`
	Count       int32 `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TaskPaging) Reset() {
	*x = TaskPaging{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_payload_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskPaging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskPaging) ProtoMessage() {}

func (x *TaskPaging) ProtoReflect() protoreflect.Message {
	mi := &file_task_payload_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskPaging.ProtoReflect.Descriptor instead.
func (*TaskPaging) Descriptor() ([]byte, []int) {
	return file_task_payload_messages_proto_rawDescGZIP(), []int{3}
}

func (x *TaskPaging) GetCurrentPage() int32 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *TaskPaging) GetTotalPage() int32 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *TaskPaging) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAllTaskByActivityIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Tasks   []*GetTaskByIDResponse `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Paging  *TaskPaging            `protobuf:"bytes,3,opt,name=paging,proto3" json:"paging,omitempty"`
}

func (x *GetAllTaskByActivityIDResponse) Reset() {
	*x = GetAllTaskByActivityIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_payload_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTaskByActivityIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTaskByActivityIDResponse) ProtoMessage() {}

func (x *GetAllTaskByActivityIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_payload_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTaskByActivityIDResponse.ProtoReflect.Descriptor instead.
func (*GetAllTaskByActivityIDResponse) Descriptor() ([]byte, []int) {
	return file_task_payload_messages_proto_rawDescGZIP(), []int{4}
}

func (x *GetAllTaskByActivityIDResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetAllTaskByActivityIDResponse) GetTasks() []*GetTaskByIDResponse {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *GetAllTaskByActivityIDResponse) GetPaging() *TaskPaging {
	if x != nil {
		return x.Paging
	}
	return nil
}

type GetTaskByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTaskByIDRequest) Reset() {
	*x = GetTaskByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_payload_messages_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByIDRequest) ProtoMessage() {}

func (x *GetTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_payload_messages_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_task_payload_messages_proto_rawDescGZIP(), []int{5}
}

func (x *GetTaskByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTaskByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ActivityId string                 `protobuf:"bytes,2,opt,name=activity_id,proto3" json:"activity_id,omitempty"`
	Title      string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	IsActive   bool                   `protobuf:"varint,4,opt,name=is_active,proto3" json:"is_active,omitempty"`
	Priority   int32                  `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	Order      int32                  `protobuf:"varint,6,opt,name=order,proto3" json:"order,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,proto3" json:"created_at,omitempty"`
	UpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	DeletedAt  *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=deleted_at,proto3,oneof" json:"deleted_at,omitempty"`
}

func (x *GetTaskByIDResponse) Reset() {
	*x = GetTaskByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_payload_messages_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskByIDResponse) ProtoMessage() {}

func (x *GetTaskByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_task_payload_messages_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskByIDResponse.ProtoReflect.Descriptor instead.
func (*GetTaskByIDResponse) Descriptor() ([]byte, []int) {
	return file_task_payload_messages_proto_rawDescGZIP(), []int{6}
}

func (x *GetTaskByIDResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetTaskByIDResponse) GetActivityId() string {
	if x != nil {
		return x.ActivityId
	}
	return ""
}

func (x *GetTaskByIDResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetTaskByIDResponse) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *GetTaskByIDResponse) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *GetTaskByIDResponse) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *GetTaskByIDResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetTaskByIDResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *GetTaskByIDResponse) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type UpdateTaskByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title    *string `protobuf:"bytes,2,opt,name=title,proto3,oneof" json:"title,omitempty"`
	IsActive *bool   `protobuf:"varint,3,opt,name=is_active,proto3,oneof" json:"is_active,omitempty"`
	Priority *int32  `protobuf:"varint,4,opt,name=priority,proto3,oneof" json:"priority,omitempty"`
	Order    *int32  `protobuf:"varint,5,opt,name=order,proto3,oneof" json:"order,omitempty"`
}

func (x *UpdateTaskByIDRequest) Reset() {
	*x = UpdateTaskByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_payload_messages_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskByIDRequest) ProtoMessage() {}

func (x *UpdateTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_payload_messages_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_task_payload_messages_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateTaskByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTaskByIDRequest) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *UpdateTaskByIDRequest) GetIsActive() bool {
	if x != nil && x.IsActive != nil {
		return *x.IsActive
	}
	return false
}

func (x *UpdateTaskByIDRequest) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *UpdateTaskByIDRequest) GetOrder() int32 {
	if x != nil && x.Order != nil {
		return *x.Order
	}
	return 0
}

type BatchUpdateTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tasks []*UpdateTaskByIDRequest `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *BatchUpdateTaskRequest) Reset() {
	*x = BatchUpdateTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_payload_messages_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateTaskRequest) ProtoMessage() {}

func (x *BatchUpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_payload_messages_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_task_payload_messages_proto_rawDescGZIP(), []int{8}
}

func (x *BatchUpdateTaskRequest) GetTasks() []*UpdateTaskByIDRequest {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type DeleteTaskByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTaskByIDRequest) Reset() {
	*x = DeleteTaskByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_task_payload_messages_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTaskByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskByIDRequest) ProtoMessage() {}

func (x *DeleteTaskByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_task_payload_messages_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskByIDRequest) Descriptor() ([]byte, []int) {
	return file_task_payload_messages_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteTaskByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_task_payload_messages_proto protoreflect.FileDescriptor

var file_task_payload_messages_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x74, 0x61, 0x73, 0x6b, 0x2f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2c, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0xe8,
	0x03, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f,
	0x69, 0x64, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x88, 0x01, 0x01, 0x12,
	0x17, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x48, 0x04, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f,
	0x72, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x6e, 0x65,
	0x77, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x05, 0x52, 0x09, 0x69, 0x73,
	0x5f, 0x6e, 0x65, 0x77, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06, 0x52,
	0x09, 0x69, 0x73, 0x5f, 0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x07, 0x52, 0x0c, 0x69, 0x73, 0x5f, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69,
	0x73, 0x5f, 0x6e, 0x65, 0x77, 0x65, 0x73, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f,
	0x6f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x69, 0x73, 0x5f, 0x61, 0x73,
	0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x66, 0x0a, 0x0a, 0x54, 0x61, 0x73,
	0x6b, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x97, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x73, 0x6b,
	0x42, 0x79, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x30,
	0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x67, 0x52, 0x06, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x22, 0x24, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xf5, 0x02, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x3a, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0xd0, 0x01, 0x0a, 0x15, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x21,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x01, 0x52, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1f, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x48, 0x03, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x88, 0x01, 0x01, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x73, 0x5f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x72, 0x69, 0x6f, 0x72, 0x69,
	0x74, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x16,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_task_payload_messages_proto_rawDescOnce sync.Once
	file_task_payload_messages_proto_rawDescData = file_task_payload_messages_proto_rawDesc
)

func file_task_payload_messages_proto_rawDescGZIP() []byte {
	file_task_payload_messages_proto_rawDescOnce.Do(func() {
		file_task_payload_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_task_payload_messages_proto_rawDescData)
	})
	return file_task_payload_messages_proto_rawDescData
}

var file_task_payload_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_task_payload_messages_proto_goTypes = []any{
	(*TaskBaseResponse)(nil),               // 0: proto.TaskBaseResponse
	(*CreateTaskRequest)(nil),              // 1: proto.CreateTaskRequest
	(*GetAllTaskByActivityIDRequest)(nil),  // 2: proto.GetAllTaskByActivityIDRequest
	(*TaskPaging)(nil),                     // 3: proto.TaskPaging
	(*GetAllTaskByActivityIDResponse)(nil), // 4: proto.GetAllTaskByActivityIDResponse
	(*GetTaskByIDRequest)(nil),             // 5: proto.GetTaskByIDRequest
	(*GetTaskByIDResponse)(nil),            // 6: proto.GetTaskByIDResponse
	(*UpdateTaskByIDRequest)(nil),          // 7: proto.UpdateTaskByIDRequest
	(*BatchUpdateTaskRequest)(nil),         // 8: proto.BatchUpdateTaskRequest
	(*DeleteTaskByIDRequest)(nil),          // 9: proto.DeleteTaskByIDRequest
	(*timestamppb.Timestamp)(nil),          // 10: google.protobuf.Timestamp
}
var file_task_payload_messages_proto_depIdxs = []int32{
	6,  // 0: proto.GetAllTaskByActivityIDResponse.tasks:type_name -> proto.GetTaskByIDResponse
	3,  // 1: proto.GetAllTaskByActivityIDResponse.paging:type_name -> proto.TaskPaging
	10, // 2: proto.GetTaskByIDResponse.created_at:type_name -> google.protobuf.Timestamp
	10, // 3: proto.GetTaskByIDResponse.updated_at:type_name -> google.protobuf.Timestamp
	10, // 4: proto.GetTaskByIDResponse.deleted_at:type_name -> google.protobuf.Timestamp
	7,  // 5: proto.BatchUpdateTaskRequest.tasks:type_name -> proto.UpdateTaskByIDRequest
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_task_payload_messages_proto_init() }
func file_task_payload_messages_proto_init() {
	if File_task_payload_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_task_payload_messages_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TaskBaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_payload_messages_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_payload_messages_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllTaskByActivityIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_payload_messages_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TaskPaging); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_payload_messages_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllTaskByActivityIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_payload_messages_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetTaskByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_payload_messages_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetTaskByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_payload_messages_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTaskByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_payload_messages_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*BatchUpdateTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_task_payload_messages_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTaskByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_task_payload_messages_proto_msgTypes[1].OneofWrappers = []any{}
	file_task_payload_messages_proto_msgTypes[2].OneofWrappers = []any{}
	file_task_payload_messages_proto_msgTypes[6].OneofWrappers = []any{}
	file_task_payload_messages_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_task_payload_messages_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_task_payload_messages_proto_goTypes,
		DependencyIndexes: file_task_payload_messages_proto_depIdxs,
		MessageInfos:      file_task_payload_messages_proto_msgTypes,
	}.Build()
	File_task_payload_messages_proto = out.File
	file_task_payload_messages_proto_rawDesc = nil
	file_task_payload_messages_proto_goTypes = nil
	file_task_payload_messages_proto_depIdxs = nil
}
